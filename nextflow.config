/*
 * Workflow metadata
 */

manifest {
   author = "Patrick Barth"
   version = "1.0.0"
   mainScript = "main.nf"
   defaultBranch = "master"
   name = "Length distribution"
   description = "Calculates length distribution of reads aligned to a reference sequence"
   nextflowVersion = "23.10.0"
}

/*
 * Parameters
 */

params {
   // General parameters
   output_dir = "output"
   // Read processing
   min_length              = 20  //Minimum length of reads to remain after adapter trimming
   filter_bacterial_contamination  = false
   kraken_db_dir = '/vol/biodb/local_databases/MGX/kraken2/kraken2-20231102'

   //Alignment
   aligner = 'bowtie2'
   annotation = 'NO_FILE'
   report_all_alignments = false
   max_alignments = false

   split_features = false

   //Nucleotide distribution
   nucleotide_distribution	= false
   nucleotide_length = 19
}

/*
 * Fixed Parameters (should not be accessed)
 */

params.manifest   = manifest
params.help       = false

/*
 * Saves reports to output directory
 */

report {
   enabled  = true
   file     = "${params.output_dir}/metadata/report.html"
   overwrite	= true
}

dag {
   enable   = true
   file     = "${params.output_dir}/metadata/graph-overview.html"
   overwrite	= true
}

timeline {
   enable   = true
   file     = "${params.output_dir}/metadata/graph-overview.html"
   overwrite	= true
}



/*
 * Executor options
 */

podman.enabled = true

/*
 * Profiles
 */

profiles {
	slurm {
		process.executor = 'slurm'
	}
}

/*
 * Process resource and container allocation
 */

process {
   withName: 'quality_control|quality_control_2' {
		cpus = 1
		memory = '1 GB'
		container = 'docker://pbarth/fastqc:1.0.1'
	}

	withName: 'adapter_removal|filter_for_length' {
		cpus = 1
		memory = '5 GB'
		container = 'docker://pbarth/trim_galore:1.0.1'
	}

   withName: 'count_length_distribution|collect_reads|extract_sequence_only' {
		cpus = 1
		memory = '10 GB'
		container = 'docker://pbarth/base:1.0'
	}

   withName: 'gb_to_gtf|gb_to_fastq' {
		cpus = 1
		memory = '10 GB'
		//container seqret + sed + gffread
	}

   withName: count_features {
		cpus = 1
		memory = '10 GB'
		//container featureCounts
	}

   withName: 'extract_read_names|feature_splitting' {
		cpus = 1
		memory = '10 GB'
		//container samtools
	}

   withName: extract_reads {
		cpus = 1
		memory = '10 GB'
		//container seqtk
	}

   withName: calculate_length_percentage {
		cpus = 1
		memory = '10 GB'
		//container python + custom script
	}

   withName: 'collect_metadata|get_md5sum|collect_versions' {
		cpus = 1
		memory = '1 GB'
		container = 'docker://pbarth/base:1.0'
	}

   withName: filter_bacterial_contamination {
      cpus = 8
      memory = '100 GB'
      maxForks = 2
      container = 'quay.io/biocontainers/kraken2:2.1.3--pl5321hdcf5f25_0' //TODO: create own
   }

   withName: 'build_index_bowtie|mapping_bowtie' {
		cpus = 4
		memory = '5 GB'
		container = 'docker://pbarth/bowtie2:1.0.1'
	}

   withName: 'build_index_STAR|mapping_STAR' {
		cpus = 4
		memory = '20 GB'
		container = 'docker://pbarth/star:1.0.1'
	}

   withName: 'multiqc' {
		cpus = 1
		memory = '10 GB'
		container = 'docker://pbarth/multiqc:1.0.1'
	}

	withName: 'calculate_nucleotide_distribution' {
		cpus = 1
		memory = '10 GB'
		//container = python
	}
}